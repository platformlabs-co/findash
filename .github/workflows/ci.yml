name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        id: uv

      - name: Install backend dependencies with UV
        working-directory: ./api
        run: |
          uv pip install --system ".[dev]" .

      - name: Run black
        working-directory: ./api
        run: |
          black --check .

      - name: Run flake8
        working-directory: ./api
        run: |
          flake8

      - name: Run backend tests with coverage
        working-directory: ./api
        run: |
          pytest --cov=app --cov-report=xml:coverage.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: api/coverage.xml
          retention-days: 1
          compression-level: 9
          if-no-files-found: 'error'

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './dashboard/package-lock.json'

      - name: Install frontend dependencies
        working-directory: ./dashboard
        run: npm ci

      - name: Run frontend tests with coverage
        working-directory: ./dashboard
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: dashboard/coverage/lcov.info
          retention-days: 1

  sonar-backend:
    name: SonarCloud Backend Analysis
    needs: [backend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: api

      - name: Verify coverage file exists
        working-directory: ./api
        run: |
          ls -la
          echo "Coverage file contents:"
          cat coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_VERBOSE: "true"
        with:
          projectBaseDir: api
          args: >
            -Dsonar.verbose=true
            -Dsonar.log.level=DEBUG

  sonar-frontend:
    name: SonarCloud Frontend Analysis
    needs: [frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dashboard
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: dashboard/coverage

      - name: Verify coverage file exists
        working-directory: ./dashboard
        run: |
          ls -la coverage/
          echo "Coverage file contents:"
          cat coverage/lcov.info

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_VERBOSE: "true"
        with:
          projectBaseDir: dashboard
          args: >
            -Dsonar.verbose=true
            -Dsonar.log.level=DEBUG 