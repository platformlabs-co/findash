apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.dashboard.name }}
  labels:
    app: {{ .Values.dashboard.name }}
spec:
  replicas: {{ .Values.dashboard.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.dashboard.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.dashboard.name }}
    spec:
      containers:
        - name: {{ .Values.dashboard.name }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.global.imageRepository }}/{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.dashboard.service.port }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: findash-secrets
          env:
            {{- range .Values.dashboard.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.dashboard.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5 